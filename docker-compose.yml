name: mysite

# version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    container_name: my_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: my_database
      POSTGRES_USER: user_1
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  web:
    build: .
    container_name: my_django
    restart: always
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - static_volume:/app/static
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "4", "--timeout", "120", "mysite.wsgi:application"]

  celery:
    build: .
    container_name: my_celery
    restart: always
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    command: ["celery", "-A", "mysite", "worker", "--loglevel=info"]
    env_file:
      - .env

  celery-beat:
    build: .
    container_name: my_celery_beat
    restart: always
    depends_on:
      - redis
    volumes:
      - .:/app
    command: ["celery", "-A", "mysite", "beat", "--loglevel=info"]
    env_file:
      - .env

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"

  nginx:
    image: nginx:latest
    container_name: my_nginx
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/static
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web

networks:
  default:
    external:
      name: mysite_default

volumes:
  postgres_data:
  static_volume:
